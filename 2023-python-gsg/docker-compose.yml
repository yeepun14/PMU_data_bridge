services:
  redpanda-broker:
    image: redpandadata/redpanda:v25.1.4
    container_name: redpanda-broker
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092 
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-broker:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-broker:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-broker:33145
    ports:
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092

  redpanda-console:
    image: redpandadata/console:v3.1.1
    container_name: redpanda-console
    ports:
      - 8080:8080
    environment:
      - KAFKA_BROKERS=redpanda-broker:29092
      - SCHEMA_REGISTRY_URL=http://localhost:8081
      - CONSOLE_BIND=0.0.0.0:8080
    depends_on:
      - redpanda-broker

services:
  timescaledb:
    image: timescale/timescaledb:2.20.0-pg17
    ports:
      - "0.0.0.0:30000:5432"  # Expose PostgreSQL (TimescaleDB) on host port 30000
    environment:
      POSTGRES_PASSWORD: password  # Default POSTGRES_USER: postgres, Default POSTGRES_DB: postgres
    volumes:
      - ./data/timescale:/var/lib/postgresql/data  # Host-relative path for TimescaleDB data
    restart: unless-stopped

grafana:
    image: grafana/grafana-oss
    ports:
      - "0.0.0.0:30001:3000"  # Expose Grafana web UI on host port 30001
    depends_on:
      - timescaledb
    volumes:
      - ./data/grafana:/var/lib/grafana  # Host-relative path for Grafana data
    restart: unless-stopped


